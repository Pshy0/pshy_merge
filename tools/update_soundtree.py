#!/usr/bin/python3
import re
import sys
from urllib.request import urlopen



def WriteFile(file_name, content):
    f = open(file_name, mode="w")
    f.write(content)
    f.close()



def GetSoundTree():
    url = "http://audio.atelier801.com/sounds.html"
    html = urlopen(url).read().decode('utf-8')
    # parsing
    mp3s = re.findall("<a href=\"\\./(.*.mp3)\">", html)
    lua_mp3s = {}
    for mp3 in mp3s:
        parent_table = lua_mp3s
        path = mp3.split("/")
        for table_name in path:
            if table_name.endswith(".mp3"):
                parent_table[table_name[0:len(table_name) - 4]] = True
                break
            elif not table_name in parent_table:
                parent_table[table_name] = {}
            parent_table = parent_table[table_name]
    return lua_mp3s



def GetSoundTreeLua():
    lua_mp3s = GetSoundTree()
    # generate lua
    lua_unindented = str(lua_mp3s).replace("True", "true").replace("true,", "true,\n").replace("true}", "true\n}\n").replace("{", "{\n").replace("}}", "}\n}").replace("}\n,", "},").replace(": ", " = ").replace("},", "},\n")
    lua_unindented = re.sub(r"'(.*)'", r"['\1']", lua_unindented, flags=re.MULTILINE)
    lua = "--- File generated by a tools/update_soundtree.py\n"
    lua += "local sounds = "
    level = 1
    for line in lua_unindented.split('\n'):
        line = line.strip()
        if "}" in line:
            level -= line.count("}")
        for i in range(0, level):
            lua += " "
        if "{" in line:
            level += line.count("{")
        lua += line + "\n"
    lua += "\n\n\n"
    lua += "return sounds"
    return lua



if __name__ == "__main__":
    lua = GetSoundTreeLua()
    WriteFile("lua/pshy/enums/soundtree.lua", lua)
    print("Updated lua/pshy/enums/soundtree.lua", file=sys.stderr)
